from flask import Flask, request, jsonify
from g4f.client import Client
import time

app = Flask(__name__)
client = Client()

@app.route('/fix_script', methods=['POST'])
def fix_script():
    # Extract the script from the POST request
    data = request.get_json(force=True)

    if not data or 'script' not in data or not data['script']:
        # Return empty output if no script is provided
        return jsonify({'fixed_script': ''})

    script_content = data['script']

    # Start timing the request
    start_time = time.time()

    # Prepare the request to the g4f API
    response = client.chat.completions.create(
        model="claude-3-sonnet",
        messages=[
            {"role": "system", "content": "You will be given a Luau script (that has been decompiled). You will rename the variables and functions to sound better, make the script more coherent, and add comments to areas of the script. Return the fixed script without adding ``` as we handle that. If no script has been given, do not produce any output. Do not respond with anything but the script"},
            {"role": "user", "content": script_content}
        ]
    )

    # Calculate the time taken
    end_time = time.time()
    elapsed_time = end_time - start_time

    print("Script Decompiled in {elapsed_time) Seconds.")
    
    # Format the fixed script with the additional comments at the top
    fixed_script = response.choices[0].message.content
    formatted_script = (
        f"-- Generated by BetterDecompiler\n"
        f"-- Took: {elapsed_time:.2f} Seconds\n"
        f"-- Scripts can be inaccurate as AI can still hallucinate.\n\n"
        f"{fixed_script}"
    )

    # Return the formatted script
    return jsonify({'fixed_script': formatted_script})

if __name__ == '__main__':
    print("Starting BetterDecompiler")
    print("Using G4F AI Reverse Proxy!")
    print("Hello from melon!")
    app.run(debug=True)
